.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "shc" "1" "January 14, 2019" "shc user manual" ""
.hy
.SH NAME
.PP
shc - Generic shell script compiler
.SH SYNOPSIS
.PP
\f[B]shc\f[R] [ -e \f[I]date\f[R] ] [ -m \f[I]addr\f[R] ] [ -i
\f[I]iopt\f[R] ] [ -x \f[I]cmnd\f[R] ] [ -l \f[I]lopt\f[R] ] [ -o
\f[I]outfile\f[R] ] [ -ABCDhUHvSr ] -f \f[I]script\f[R]
.SH DESCRIPTION
.PP
\f[B]shc\f[R] creates a stripped binary executable version of the script
specified with \f[V]-f\f[R] on the command line.
.PP
The binary version will get a \f[V].x\f[R] extension appended by default
if \f[I]outfile\f[R] is not defined with [-o \f[I]outfile\f[R]] option
and will usually be a bit larger in size than the original ascii code.
Generated C source code is saved in a file with the extension
\f[V].x.c\f[R] or in a file specified with appropriate option.
.PP
If you supply an expiration date with the \f[V]-e\f[R] option, the
compiled binary will refuse to run after the date specified.
The message \f[B]Please contact your provider\f[R] will be displayed
instead.
This message can be changed with the \f[V]-m\f[R] option.
.PP
You can compile any kind of shell script, but you need to supply valid
\f[V]-i\f[R], \f[V]-x\f[R] and \f[V]-l\f[R] options.
.PP
The compiled binary will still be dependent on the shell specified in
the first line of the shell code (i.e.\ \f[V]#!/bin/sh\f[R]), thus
\f[B]shc\f[R] does not create completely independent binaries.
.PP
\f[B]shc\f[R] itself is not a compiler such as cc, it rather encodes and
encrypts a shell script and generates C source code with the added
expiration capability.
It then uses the system compiler to compile a stripped binary which
behaves exactly like the original script.
Upon execution, the compiled binary will decrypt and execute the code
with the shell \f[V]-c\f[R] option.
Unfortunately, it will not give you any speed improvement as a real C
program would.
.PP
\f[B]shc\f[R]\[cq]s main purpose is to protect your shell scripts from
modification or inspection.
You can use it if you wish to distribute your scripts but don\[cq]t want
them to be easily readable by other people.
.SH OPTIONS
.TP
-e \f[I]date\f[R]
Expiration date in \f[I]dd/mm/yyyy\f[R] format \f[V][none]\f[R]
.TP
-m \f[I]message\f[R]
message to display upon expiration
\f[V][\[dq]Please contact your provider\[dq]]\f[R]
.TP
-f \f[I]script_name\f[R]
File path of the script to compile
.TP
-i \f[I]inline_option\f[R]
Inline option for the shell interpreter i.e: \f[V]-e\f[R]
.TP
-x \f[I]command\f[R]
eXec command, as a printf format i.e:
\f[V]exec(\[rs]\[rs]\[aq]%s\[rs]\[rs]\[aq],\[at]ARGV);\f[R]
.TP
-l \f[I]last_option\f[R]
Last shell option i.e: \f[V]--\f[R]
.TP
-o \f[I]outfile\f[R]
output to the file specified by outfile
.TP
-r
Relax security.
Make a redistributable binary which executes on different systems
running the same operating system.
You can release your binary with this option for others to use
.TP
-v
Verbose compilation
.TP
-S
Switch ON setuid for root callable programs [OFF]
.TP
-D
Switch on debug exec calls
.TP
-U
Make binary to be untraceable (using \f[I]strace\f[R], \f[I]ptrace\f[R],
\f[I]truss\f[R], etc.)
.TP
-H
Hardening.
Extra security flag without root access requirement that protects
against dumping, code injection, \f[V]cat /proc/pid/cmdline\f[R],
ptrace, etc..
This feature is \f[B]experimental\f[R] and may not work on all systems.
it requires bourne shell (sh) scripts
.TP
-C
Display license and exit
.TP
-A
Display abstract and exit
.TP
-B
Compile for BusyBox
.TP
-h
Display help and exit
.SH ENVIRONMENT VARIABLES
.TP
CC
C compiler command \f[V][cc]\f[R]
.TP
CFLAGS
C compiler flags \f[V][none]\f[R]
.TP
LDFLAGS
Linker flags \f[V][none]\f[R]
.SH EXAMPLES
.PP
Compile a script which can be run on other systems with the trace option
enabled (without \f[V]-U\f[R] flag):
.IP
.nf
\f[C]
shc -f myscript -o mybinary
\f[R]
.fi
.PP
Compile an untraceable binary:
.IP
.nf
\f[C]
shc -Uf myscript -o mybinary
\f[R]
.fi
.PP
Compile an untraceable binary that doesn\[cq]t require root access
(experimental):
.IP
.nf
\f[C]
shc -Hf myscript -o mybinary
\f[R]
.fi
.SH LIMITATIONS
.PP
The maximum size of the script that could be executed once compiled is
limited by the operating system configuration parameter
\f[V]_SC_ARG_MAX\f[R] (see sysconf(2))
.SH AUTHORS
.PP
Francisco Rosales <frosal@fi.upm.es>
.PP
Md Jahidul Hamid <jahidulhamid@yahoo.com>
.SH REPORT BUGS TO
.PP
https://github.com/neurobin/shc/issues
